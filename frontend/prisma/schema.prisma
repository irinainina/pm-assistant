generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  created_at    DateTime? @default(now())
  
  accounts      Account[]
  sessions      Session[]
  conversations Conversation[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Conversation {
  id               String   @id @default(cuid())
  user_id          String   @map("user_id")
  title            String
  is_useful        Boolean  @default(false)
  last_activity_at DateTime @default(now())
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  user    User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  messages Message[]

  @@map("conversations")
  @@index([user_id, last_activity_at], name: "conversations_user_id_last_activity_at_idx")
  @@index([user_id, is_useful], name: "conversations_user_id_is_useful_idx")
}

model Message {
  id              String   @id @default(cuid())
  conversation_id String   @map("conversation_id")
  role            String
  content         String   @db.Text
  sources         Json?
  created_at      DateTime @default(now())

  conversation Conversation @relation(fields: [conversation_id], references: [id], onDelete: Cascade)

  @@map("messages")
  @@index([conversation_id, created_at], name: "messages_conversation_id_created_at_idx")
  @@index([conversation_id], name: "messages_conversation_id_idx")
}
